package appplatform

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// APIPortalProvisioningState enumerates the values for api portal provisioning state.
type APIPortalProvisioningState string

const (
	// APIPortalProvisioningStateCreating ...
	APIPortalProvisioningStateCreating APIPortalProvisioningState = "Creating"
	// APIPortalProvisioningStateDeleting ...
	APIPortalProvisioningStateDeleting APIPortalProvisioningState = "Deleting"
	// APIPortalProvisioningStateFailed ...
	APIPortalProvisioningStateFailed APIPortalProvisioningState = "Failed"
	// APIPortalProvisioningStateSucceeded ...
	APIPortalProvisioningStateSucceeded APIPortalProvisioningState = "Succeeded"
	// APIPortalProvisioningStateUpdating ...
	APIPortalProvisioningStateUpdating APIPortalProvisioningState = "Updating"
)

// PossibleAPIPortalProvisioningStateValues returns an array of possible values for the APIPortalProvisioningState const type.
func PossibleAPIPortalProvisioningStateValues() []APIPortalProvisioningState {
	return []APIPortalProvisioningState{APIPortalProvisioningStateCreating, APIPortalProvisioningStateDeleting, APIPortalProvisioningStateFailed, APIPortalProvisioningStateSucceeded, APIPortalProvisioningStateUpdating}
}

// ActionType enumerates the values for action type.
type ActionType string

const (
	// ActionTypeInternal ...
	ActionTypeInternal ActionType = "Internal"
)

// PossibleActionTypeValues returns an array of possible values for the ActionType const type.
func PossibleActionTypeValues() []ActionType {
	return []ActionType{ActionTypeInternal}
}

// ApmProvisioningState enumerates the values for apm provisioning state.
type ApmProvisioningState string

const (
	// ApmProvisioningStateCanceled ...
	ApmProvisioningStateCanceled ApmProvisioningState = "Canceled"
	// ApmProvisioningStateCreating ...
	ApmProvisioningStateCreating ApmProvisioningState = "Creating"
	// ApmProvisioningStateDeleting ...
	ApmProvisioningStateDeleting ApmProvisioningState = "Deleting"
	// ApmProvisioningStateFailed ...
	ApmProvisioningStateFailed ApmProvisioningState = "Failed"
	// ApmProvisioningStateSucceeded ...
	ApmProvisioningStateSucceeded ApmProvisioningState = "Succeeded"
	// ApmProvisioningStateUpdating ...
	ApmProvisioningStateUpdating ApmProvisioningState = "Updating"
)

// PossibleApmProvisioningStateValues returns an array of possible values for the ApmProvisioningState const type.
func PossibleApmProvisioningStateValues() []ApmProvisioningState {
	return []ApmProvisioningState{ApmProvisioningStateCanceled, ApmProvisioningStateCreating, ApmProvisioningStateDeleting, ApmProvisioningStateFailed, ApmProvisioningStateSucceeded, ApmProvisioningStateUpdating}
}

// ApmType enumerates the values for apm type.
type ApmType string

const (
	// ApmTypeAppDynamics ...
	ApmTypeAppDynamics ApmType = "AppDynamics"
	// ApmTypeApplicationInsights ...
	ApmTypeApplicationInsights ApmType = "ApplicationInsights"
	// ApmTypeDynatrace ...
	ApmTypeDynatrace ApmType = "Dynatrace"
	// ApmTypeElasticAPM ...
	ApmTypeElasticAPM ApmType = "ElasticAPM"
	// ApmTypeNewRelic ...
	ApmTypeNewRelic ApmType = "NewRelic"
)

// PossibleApmTypeValues returns an array of possible values for the ApmType const type.
func PossibleApmTypeValues() []ApmType {
	return []ApmType{ApmTypeAppDynamics, ApmTypeApplicationInsights, ApmTypeDynatrace, ApmTypeElasticAPM, ApmTypeNewRelic}
}

// AppResourceProvisioningState enumerates the values for app resource provisioning state.
type AppResourceProvisioningState string

const (
	// AppResourceProvisioningStateCreating ...
	AppResourceProvisioningStateCreating AppResourceProvisioningState = "Creating"
	// AppResourceProvisioningStateDeleting ...
	AppResourceProvisioningStateDeleting AppResourceProvisioningState = "Deleting"
	// AppResourceProvisioningStateFailed ...
	AppResourceProvisioningStateFailed AppResourceProvisioningState = "Failed"
	// AppResourceProvisioningStateSucceeded ...
	AppResourceProvisioningStateSucceeded AppResourceProvisioningState = "Succeeded"
	// AppResourceProvisioningStateUpdating ...
	AppResourceProvisioningStateUpdating AppResourceProvisioningState = "Updating"
)

// PossibleAppResourceProvisioningStateValues returns an array of possible values for the AppResourceProvisioningState const type.
func PossibleAppResourceProvisioningStateValues() []AppResourceProvisioningState {
	return []AppResourceProvisioningState{AppResourceProvisioningStateCreating, AppResourceProvisioningStateDeleting, AppResourceProvisioningStateFailed, AppResourceProvisioningStateSucceeded, AppResourceProvisioningStateUpdating}
}

// ApplicationAcceleratorProvisioningState enumerates the values for application accelerator provisioning
// state.
type ApplicationAcceleratorProvisioningState string

const (
	// ApplicationAcceleratorProvisioningStateCreating ...
	ApplicationAcceleratorProvisioningStateCreating ApplicationAcceleratorProvisioningState = "Creating"
	// ApplicationAcceleratorProvisioningStateDeleting ...
	ApplicationAcceleratorProvisioningStateDeleting ApplicationAcceleratorProvisioningState = "Deleting"
	// ApplicationAcceleratorProvisioningStateFailed ...
	ApplicationAcceleratorProvisioningStateFailed ApplicationAcceleratorProvisioningState = "Failed"
	// ApplicationAcceleratorProvisioningStateSucceeded ...
	ApplicationAcceleratorProvisioningStateSucceeded ApplicationAcceleratorProvisioningState = "Succeeded"
	// ApplicationAcceleratorProvisioningStateUpdating ...
	ApplicationAcceleratorProvisioningStateUpdating ApplicationAcceleratorProvisioningState = "Updating"
)

// PossibleApplicationAcceleratorProvisioningStateValues returns an array of possible values for the ApplicationAcceleratorProvisioningState const type.
func PossibleApplicationAcceleratorProvisioningStateValues() []ApplicationAcceleratorProvisioningState {
	return []ApplicationAcceleratorProvisioningState{ApplicationAcceleratorProvisioningStateCreating, ApplicationAcceleratorProvisioningStateDeleting, ApplicationAcceleratorProvisioningStateFailed, ApplicationAcceleratorProvisioningStateSucceeded, ApplicationAcceleratorProvisioningStateUpdating}
}

// ApplicationLiveViewProvisioningState enumerates the values for application live view provisioning state.
type ApplicationLiveViewProvisioningState string

const (
	// ApplicationLiveViewProvisioningStateCanceled ...
	ApplicationLiveViewProvisioningStateCanceled ApplicationLiveViewProvisioningState = "Canceled"
	// ApplicationLiveViewProvisioningStateCreating ...
	ApplicationLiveViewProvisioningStateCreating ApplicationLiveViewProvisioningState = "Creating"
	// ApplicationLiveViewProvisioningStateDeleting ...
	ApplicationLiveViewProvisioningStateDeleting ApplicationLiveViewProvisioningState = "Deleting"
	// ApplicationLiveViewProvisioningStateFailed ...
	ApplicationLiveViewProvisioningStateFailed ApplicationLiveViewProvisioningState = "Failed"
	// ApplicationLiveViewProvisioningStateSucceeded ...
	ApplicationLiveViewProvisioningStateSucceeded ApplicationLiveViewProvisioningState = "Succeeded"
	// ApplicationLiveViewProvisioningStateUpdating ...
	ApplicationLiveViewProvisioningStateUpdating ApplicationLiveViewProvisioningState = "Updating"
)

// PossibleApplicationLiveViewProvisioningStateValues returns an array of possible values for the ApplicationLiveViewProvisioningState const type.
func PossibleApplicationLiveViewProvisioningStateValues() []ApplicationLiveViewProvisioningState {
	return []ApplicationLiveViewProvisioningState{ApplicationLiveViewProvisioningStateCanceled, ApplicationLiveViewProvisioningStateCreating, ApplicationLiveViewProvisioningStateDeleting, ApplicationLiveViewProvisioningStateFailed, ApplicationLiveViewProvisioningStateSucceeded, ApplicationLiveViewProvisioningStateUpdating}
}

// AuthType enumerates the values for auth type.
type AuthType string

const (
	// AuthTypeAcceleratorAuthSetting ...
	AuthTypeAcceleratorAuthSetting AuthType = "AcceleratorAuthSetting"
	// AuthTypeBasicAuth ...
	AuthTypeBasicAuth AuthType = "BasicAuth"
	// AuthTypePublic ...
	AuthTypePublic AuthType = "Public"
	// AuthTypeSSH ...
	AuthTypeSSH AuthType = "SSH"
)

// PossibleAuthTypeValues returns an array of possible values for the AuthType const type.
func PossibleAuthTypeValues() []AuthType {
	return []AuthType{AuthTypeAcceleratorAuthSetting, AuthTypeBasicAuth, AuthTypePublic, AuthTypeSSH}
}

// BackendProtocol enumerates the values for backend protocol.
type BackendProtocol string

const (
	// BackendProtocolDefault ...
	BackendProtocolDefault BackendProtocol = "Default"
	// BackendProtocolGRPC ...
	BackendProtocolGRPC BackendProtocol = "GRPC"
)

// PossibleBackendProtocolValues returns an array of possible values for the BackendProtocol const type.
func PossibleBackendProtocolValues() []BackendProtocol {
	return []BackendProtocol{BackendProtocolDefault, BackendProtocolGRPC}
}

// BindingType enumerates the values for binding type.
type BindingType string

const (
	// BindingTypeApacheSkyWalking ...
	BindingTypeApacheSkyWalking BindingType = "ApacheSkyWalking"
	// BindingTypeAppDynamics ...
	BindingTypeAppDynamics BindingType = "AppDynamics"
	// BindingTypeApplicationInsights ...
	BindingTypeApplicationInsights BindingType = "ApplicationInsights"
	// BindingTypeCACertificates ...
	BindingTypeCACertificates BindingType = "CACertificates"
	// BindingTypeDynatrace ...
	BindingTypeDynatrace BindingType = "Dynatrace"
	// BindingTypeElasticAPM ...
	BindingTypeElasticAPM BindingType = "ElasticAPM"
	// BindingTypeNewRelic ...
	BindingTypeNewRelic BindingType = "NewRelic"
)

// PossibleBindingTypeValues returns an array of possible values for the BindingType const type.
func PossibleBindingTypeValues() []BindingType {
	return []BindingType{BindingTypeApacheSkyWalking, BindingTypeAppDynamics, BindingTypeApplicationInsights, BindingTypeCACertificates, BindingTypeDynatrace, BindingTypeElasticAPM, BindingTypeNewRelic}
}

// BuildProvisioningState enumerates the values for build provisioning state.
type BuildProvisioningState string

const (
	// BuildProvisioningStateCreating ...
	BuildProvisioningStateCreating BuildProvisioningState = "Creating"
	// BuildProvisioningStateDeleting ...
	BuildProvisioningStateDeleting BuildProvisioningState = "Deleting"
	// BuildProvisioningStateFailed ...
	BuildProvisioningStateFailed BuildProvisioningState = "Failed"
	// BuildProvisioningStateSucceeded ...
	BuildProvisioningStateSucceeded BuildProvisioningState = "Succeeded"
	// BuildProvisioningStateUpdating ...
	BuildProvisioningStateUpdating BuildProvisioningState = "Updating"
)

// PossibleBuildProvisioningStateValues returns an array of possible values for the BuildProvisioningState const type.
func PossibleBuildProvisioningStateValues() []BuildProvisioningState {
	return []BuildProvisioningState{BuildProvisioningStateCreating, BuildProvisioningStateDeleting, BuildProvisioningStateFailed, BuildProvisioningStateSucceeded, BuildProvisioningStateUpdating}
}

// BuildResultProvisioningState enumerates the values for build result provisioning state.
type BuildResultProvisioningState string

const (
	// BuildResultProvisioningStateBuilding ...
	BuildResultProvisioningStateBuilding BuildResultProvisioningState = "Building"
	// BuildResultProvisioningStateDeleting ...
	BuildResultProvisioningStateDeleting BuildResultProvisioningState = "Deleting"
	// BuildResultProvisioningStateFailed ...
	BuildResultProvisioningStateFailed BuildResultProvisioningState = "Failed"
	// BuildResultProvisioningStateQueuing ...
	BuildResultProvisioningStateQueuing BuildResultProvisioningState = "Queuing"
	// BuildResultProvisioningStateSucceeded ...
	BuildResultProvisioningStateSucceeded BuildResultProvisioningState = "Succeeded"
)

// PossibleBuildResultProvisioningStateValues returns an array of possible values for the BuildResultProvisioningState const type.
func PossibleBuildResultProvisioningStateValues() []BuildResultProvisioningState {
	return []BuildResultProvisioningState{BuildResultProvisioningStateBuilding, BuildResultProvisioningStateDeleting, BuildResultProvisioningStateFailed, BuildResultProvisioningStateQueuing, BuildResultProvisioningStateSucceeded}
}

// BuildServiceProvisioningState enumerates the values for build service provisioning state.
type BuildServiceProvisioningState string

const (
	// BuildServiceProvisioningStateCreating ...
	BuildServiceProvisioningStateCreating BuildServiceProvisioningState = "Creating"
	// BuildServiceProvisioningStateDeleting ...
	BuildServiceProvisioningStateDeleting BuildServiceProvisioningState = "Deleting"
	// BuildServiceProvisioningStateFailed ...
	BuildServiceProvisioningStateFailed BuildServiceProvisioningState = "Failed"
	// BuildServiceProvisioningStateSucceeded ...
	BuildServiceProvisioningStateSucceeded BuildServiceProvisioningState = "Succeeded"
	// BuildServiceProvisioningStateUpdating ...
	BuildServiceProvisioningStateUpdating BuildServiceProvisioningState = "Updating"
)

// PossibleBuildServiceProvisioningStateValues returns an array of possible values for the BuildServiceProvisioningState const type.
func PossibleBuildServiceProvisioningStateValues() []BuildServiceProvisioningState {
	return []BuildServiceProvisioningState{BuildServiceProvisioningStateCreating, BuildServiceProvisioningStateDeleting, BuildServiceProvisioningStateFailed, BuildServiceProvisioningStateSucceeded, BuildServiceProvisioningStateUpdating}
}

// BuilderProvisioningState enumerates the values for builder provisioning state.
type BuilderProvisioningState string

const (
	// BuilderProvisioningStateCreating ...
	BuilderProvisioningStateCreating BuilderProvisioningState = "Creating"
	// BuilderProvisioningStateDeleting ...
	BuilderProvisioningStateDeleting BuilderProvisioningState = "Deleting"
	// BuilderProvisioningStateFailed ...
	BuilderProvisioningStateFailed BuilderProvisioningState = "Failed"
	// BuilderProvisioningStateSucceeded ...
	BuilderProvisioningStateSucceeded BuilderProvisioningState = "Succeeded"
	// BuilderProvisioningStateUpdating ...
	BuilderProvisioningStateUpdating BuilderProvisioningState = "Updating"
)

// PossibleBuilderProvisioningStateValues returns an array of possible values for the BuilderProvisioningState const type.
func PossibleBuilderProvisioningStateValues() []BuilderProvisioningState {
	return []BuilderProvisioningState{BuilderProvisioningStateCreating, BuilderProvisioningStateDeleting, BuilderProvisioningStateFailed, BuilderProvisioningStateSucceeded, BuilderProvisioningStateUpdating}
}

// BuildpackBindingProvisioningState enumerates the values for buildpack binding provisioning state.
type BuildpackBindingProvisioningState string

const (
	// BuildpackBindingProvisioningStateCreating ...
	BuildpackBindingProvisioningStateCreating BuildpackBindingProvisioningState = "Creating"
	// BuildpackBindingProvisioningStateDeleting ...
	BuildpackBindingProvisioningStateDeleting BuildpackBindingProvisioningState = "Deleting"
	// BuildpackBindingProvisioningStateFailed ...
	BuildpackBindingProvisioningStateFailed BuildpackBindingProvisioningState = "Failed"
	// BuildpackBindingProvisioningStateSucceeded ...
	BuildpackBindingProvisioningStateSucceeded BuildpackBindingProvisioningState = "Succeeded"
	// BuildpackBindingProvisioningStateUpdating ...
	BuildpackBindingProvisioningStateUpdating BuildpackBindingProvisioningState = "Updating"
)

// PossibleBuildpackBindingProvisioningStateValues returns an array of possible values for the BuildpackBindingProvisioningState const type.
func PossibleBuildpackBindingProvisioningStateValues() []BuildpackBindingProvisioningState {
	return []BuildpackBindingProvisioningState{BuildpackBindingProvisioningStateCreating, BuildpackBindingProvisioningStateDeleting, BuildpackBindingProvisioningStateFailed, BuildpackBindingProvisioningStateSucceeded, BuildpackBindingProvisioningStateUpdating}
}

// CertificateResourceProvisioningState enumerates the values for certificate resource provisioning state.
type CertificateResourceProvisioningState string

const (
	// CertificateResourceProvisioningStateCreating ...
	CertificateResourceProvisioningStateCreating CertificateResourceProvisioningState = "Creating"
	// CertificateResourceProvisioningStateDeleting ...
	CertificateResourceProvisioningStateDeleting CertificateResourceProvisioningState = "Deleting"
	// CertificateResourceProvisioningStateFailed ...
	CertificateResourceProvisioningStateFailed CertificateResourceProvisioningState = "Failed"
	// CertificateResourceProvisioningStateSucceeded ...
	CertificateResourceProvisioningStateSucceeded CertificateResourceProvisioningState = "Succeeded"
	// CertificateResourceProvisioningStateUpdating ...
	CertificateResourceProvisioningStateUpdating CertificateResourceProvisioningState = "Updating"
)

// PossibleCertificateResourceProvisioningStateValues returns an array of possible values for the CertificateResourceProvisioningState const type.
func PossibleCertificateResourceProvisioningStateValues() []CertificateResourceProvisioningState {
	return []CertificateResourceProvisioningState{CertificateResourceProvisioningStateCreating, CertificateResourceProvisioningStateDeleting, CertificateResourceProvisioningStateFailed, CertificateResourceProvisioningStateSucceeded, CertificateResourceProvisioningStateUpdating}
}

// ConfigServerEnabledState enumerates the values for config server enabled state.
type ConfigServerEnabledState string

const (
	// ConfigServerEnabledStateDisabled Disable the config server.
	ConfigServerEnabledStateDisabled ConfigServerEnabledState = "Disabled"
	// ConfigServerEnabledStateEnabled Enable the config server.
	ConfigServerEnabledStateEnabled ConfigServerEnabledState = "Enabled"
)

// PossibleConfigServerEnabledStateValues returns an array of possible values for the ConfigServerEnabledState const type.
func PossibleConfigServerEnabledStateValues() []ConfigServerEnabledState {
	return []ConfigServerEnabledState{ConfigServerEnabledStateDisabled, ConfigServerEnabledStateEnabled}
}

// ConfigServerState enumerates the values for config server state.
type ConfigServerState string

const (
	// ConfigServerStateDeleted ...
	ConfigServerStateDeleted ConfigServerState = "Deleted"
	// ConfigServerStateFailed ...
	ConfigServerStateFailed ConfigServerState = "Failed"
	// ConfigServerStateNotAvailable ...
	ConfigServerStateNotAvailable ConfigServerState = "NotAvailable"
	// ConfigServerStateSucceeded ...
	ConfigServerStateSucceeded ConfigServerState = "Succeeded"
	// ConfigServerStateUpdating ...
	ConfigServerStateUpdating ConfigServerState = "Updating"
)

// PossibleConfigServerStateValues returns an array of possible values for the ConfigServerState const type.
func PossibleConfigServerStateValues() []ConfigServerState {
	return []ConfigServerState{ConfigServerStateDeleted, ConfigServerStateFailed, ConfigServerStateNotAvailable, ConfigServerStateSucceeded, ConfigServerStateUpdating}
}

// ConfigurationServiceGeneration enumerates the values for configuration service generation.
type ConfigurationServiceGeneration string

const (
	// ConfigurationServiceGenerationGen1 ...
	ConfigurationServiceGenerationGen1 ConfigurationServiceGeneration = "Gen1"
	// ConfigurationServiceGenerationGen2 ...
	ConfigurationServiceGenerationGen2 ConfigurationServiceGeneration = "Gen2"
)

// PossibleConfigurationServiceGenerationValues returns an array of possible values for the ConfigurationServiceGeneration const type.
func PossibleConfigurationServiceGenerationValues() []ConfigurationServiceGeneration {
	return []ConfigurationServiceGeneration{ConfigurationServiceGenerationGen1, ConfigurationServiceGenerationGen2}
}

// ConfigurationServiceProvisioningState enumerates the values for configuration service provisioning state.
type ConfigurationServiceProvisioningState string

const (
	// ConfigurationServiceProvisioningStateCreating ...
	ConfigurationServiceProvisioningStateCreating ConfigurationServiceProvisioningState = "Creating"
	// ConfigurationServiceProvisioningStateDeleting ...
	ConfigurationServiceProvisioningStateDeleting ConfigurationServiceProvisioningState = "Deleting"
	// ConfigurationServiceProvisioningStateFailed ...
	ConfigurationServiceProvisioningStateFailed ConfigurationServiceProvisioningState = "Failed"
	// ConfigurationServiceProvisioningStateSucceeded ...
	ConfigurationServiceProvisioningStateSucceeded ConfigurationServiceProvisioningState = "Succeeded"
	// ConfigurationServiceProvisioningStateUpdating ...
	ConfigurationServiceProvisioningStateUpdating ConfigurationServiceProvisioningState = "Updating"
)

// PossibleConfigurationServiceProvisioningStateValues returns an array of possible values for the ConfigurationServiceProvisioningState const type.
func PossibleConfigurationServiceProvisioningStateValues() []ConfigurationServiceProvisioningState {
	return []ConfigurationServiceProvisioningState{ConfigurationServiceProvisioningStateCreating, ConfigurationServiceProvisioningStateDeleting, ConfigurationServiceProvisioningStateFailed, ConfigurationServiceProvisioningStateSucceeded, ConfigurationServiceProvisioningStateUpdating}
}

// ContainerRegistryProvisioningState enumerates the values for container registry provisioning state.
type ContainerRegistryProvisioningState string

const (
	// ContainerRegistryProvisioningStateCanceled ...
	ContainerRegistryProvisioningStateCanceled ContainerRegistryProvisioningState = "Canceled"
	// ContainerRegistryProvisioningStateCreating ...
	ContainerRegistryProvisioningStateCreating ContainerRegistryProvisioningState = "Creating"
	// ContainerRegistryProvisioningStateDeleting ...
	ContainerRegistryProvisioningStateDeleting ContainerRegistryProvisioningState = "Deleting"
	// ContainerRegistryProvisioningStateFailed ...
	ContainerRegistryProvisioningStateFailed ContainerRegistryProvisioningState = "Failed"
	// ContainerRegistryProvisioningStateSucceeded ...
	ContainerRegistryProvisioningStateSucceeded ContainerRegistryProvisioningState = "Succeeded"
	// ContainerRegistryProvisioningStateUpdating ...
	ContainerRegistryProvisioningStateUpdating ContainerRegistryProvisioningState = "Updating"
)

// PossibleContainerRegistryProvisioningStateValues returns an array of possible values for the ContainerRegistryProvisioningState const type.
func PossibleContainerRegistryProvisioningStateValues() []ContainerRegistryProvisioningState {
	return []ContainerRegistryProvisioningState{ContainerRegistryProvisioningStateCanceled, ContainerRegistryProvisioningStateCreating, ContainerRegistryProvisioningStateDeleting, ContainerRegistryProvisioningStateFailed, ContainerRegistryProvisioningStateSucceeded, ContainerRegistryProvisioningStateUpdating}
}

// CreatedByType enumerates the values for created by type.
type CreatedByType string

const (
	// CreatedByTypeApplication ...
	CreatedByTypeApplication CreatedByType = "Application"
	// CreatedByTypeKey ...
	CreatedByTypeKey CreatedByType = "Key"
	// CreatedByTypeManagedIdentity ...
	CreatedByTypeManagedIdentity CreatedByType = "ManagedIdentity"
	// CreatedByTypeUser ...
	CreatedByTypeUser CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns an array of possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{CreatedByTypeApplication, CreatedByTypeKey, CreatedByTypeManagedIdentity, CreatedByTypeUser}
}

// CustomDomainResourceProvisioningState enumerates the values for custom domain resource provisioning state.
type CustomDomainResourceProvisioningState string

const (
	// CustomDomainResourceProvisioningStateCreating ...
	CustomDomainResourceProvisioningStateCreating CustomDomainResourceProvisioningState = "Creating"
	// CustomDomainResourceProvisioningStateDeleting ...
	CustomDomainResourceProvisioningStateDeleting CustomDomainResourceProvisioningState = "Deleting"
	// CustomDomainResourceProvisioningStateFailed ...
	CustomDomainResourceProvisioningStateFailed CustomDomainResourceProvisioningState = "Failed"
	// CustomDomainResourceProvisioningStateSucceeded ...
	CustomDomainResourceProvisioningStateSucceeded CustomDomainResourceProvisioningState = "Succeeded"
	// CustomDomainResourceProvisioningStateUpdating ...
	CustomDomainResourceProvisioningStateUpdating CustomDomainResourceProvisioningState = "Updating"
)

// PossibleCustomDomainResourceProvisioningStateValues returns an array of possible values for the CustomDomainResourceProvisioningState const type.
func PossibleCustomDomainResourceProvisioningStateValues() []CustomDomainResourceProvisioningState {
	return []CustomDomainResourceProvisioningState{CustomDomainResourceProvisioningStateCreating, CustomDomainResourceProvisioningStateDeleting, CustomDomainResourceProvisioningStateFailed, CustomDomainResourceProvisioningStateSucceeded, CustomDomainResourceProvisioningStateUpdating}
}

// CustomizedAcceleratorProvisioningState enumerates the values for customized accelerator provisioning state.
type CustomizedAcceleratorProvisioningState string

const (
	// CustomizedAcceleratorProvisioningStateCreating ...
	CustomizedAcceleratorProvisioningStateCreating CustomizedAcceleratorProvisioningState = "Creating"
	// CustomizedAcceleratorProvisioningStateDeleting ...
	CustomizedAcceleratorProvisioningStateDeleting CustomizedAcceleratorProvisioningState = "Deleting"
	// CustomizedAcceleratorProvisioningStateFailed ...
	CustomizedAcceleratorProvisioningStateFailed CustomizedAcceleratorProvisioningState = "Failed"
	// CustomizedAcceleratorProvisioningStateSucceeded ...
	CustomizedAcceleratorProvisioningStateSucceeded CustomizedAcceleratorProvisioningState = "Succeeded"
	// CustomizedAcceleratorProvisioningStateUpdating ...
	CustomizedAcceleratorProvisioningStateUpdating CustomizedAcceleratorProvisioningState = "Updating"
)

// PossibleCustomizedAcceleratorProvisioningStateValues returns an array of possible values for the CustomizedAcceleratorProvisioningState const type.
func PossibleCustomizedAcceleratorProvisioningStateValues() []CustomizedAcceleratorProvisioningState {
	return []CustomizedAcceleratorProvisioningState{CustomizedAcceleratorProvisioningStateCreating, CustomizedAcceleratorProvisioningStateDeleting, CustomizedAcceleratorProvisioningStateFailed, CustomizedAcceleratorProvisioningStateSucceeded, CustomizedAcceleratorProvisioningStateUpdating}
}

// CustomizedAcceleratorValidateResultState enumerates the values for customized accelerator validate result
// state.
type CustomizedAcceleratorValidateResultState string

const (
	// CustomizedAcceleratorValidateResultStateInvalid Customized accelerator properties are invalid.
	CustomizedAcceleratorValidateResultStateInvalid CustomizedAcceleratorValidateResultState = "Invalid"
	// CustomizedAcceleratorValidateResultStateValid Customized accelerator properties are valid.
	CustomizedAcceleratorValidateResultStateValid CustomizedAcceleratorValidateResultState = "Valid"
)

// PossibleCustomizedAcceleratorValidateResultStateValues returns an array of possible values for the CustomizedAcceleratorValidateResultState const type.
func PossibleCustomizedAcceleratorValidateResultStateValues() []CustomizedAcceleratorValidateResultState {
	return []CustomizedAcceleratorValidateResultState{CustomizedAcceleratorValidateResultStateInvalid, CustomizedAcceleratorValidateResultStateValid}
}

// DeploymentResourceProvisioningState enumerates the values for deployment resource provisioning state.
type DeploymentResourceProvisioningState string

const (
	// DeploymentResourceProvisioningStateCreating ...
	DeploymentResourceProvisioningStateCreating DeploymentResourceProvisioningState = "Creating"
	// DeploymentResourceProvisioningStateFailed ...
	DeploymentResourceProvisioningStateFailed DeploymentResourceProvisioningState = "Failed"
	// DeploymentResourceProvisioningStateSucceeded ...
	DeploymentResourceProvisioningStateSucceeded DeploymentResourceProvisioningState = "Succeeded"
	// DeploymentResourceProvisioningStateUpdating ...
	DeploymentResourceProvisioningStateUpdating DeploymentResourceProvisioningState = "Updating"
)

// PossibleDeploymentResourceProvisioningStateValues returns an array of possible values for the DeploymentResourceProvisioningState const type.
func PossibleDeploymentResourceProvisioningStateValues() []DeploymentResourceProvisioningState {
	return []DeploymentResourceProvisioningState{DeploymentResourceProvisioningStateCreating, DeploymentResourceProvisioningStateFailed, DeploymentResourceProvisioningStateSucceeded, DeploymentResourceProvisioningStateUpdating}
}

// DeploymentResourceStatus enumerates the values for deployment resource status.
type DeploymentResourceStatus string

const (
	// DeploymentResourceStatusRunning ...
	DeploymentResourceStatusRunning DeploymentResourceStatus = "Running"
	// DeploymentResourceStatusStopped ...
	DeploymentResourceStatusStopped DeploymentResourceStatus = "Stopped"
)

// PossibleDeploymentResourceStatusValues returns an array of possible values for the DeploymentResourceStatus const type.
func PossibleDeploymentResourceStatusValues() []DeploymentResourceStatus {
	return []DeploymentResourceStatus{DeploymentResourceStatusRunning, DeploymentResourceStatusStopped}
}

// DevToolPortalFeatureState enumerates the values for dev tool portal feature state.
type DevToolPortalFeatureState string

const (
	// DevToolPortalFeatureStateDisabled Disable the plugin in Dev Tool Portal.
	DevToolPortalFeatureStateDisabled DevToolPortalFeatureState = "Disabled"
	// DevToolPortalFeatureStateEnabled Enable the plugin in Dev Tool Portal.
	DevToolPortalFeatureStateEnabled DevToolPortalFeatureState = "Enabled"
)

// PossibleDevToolPortalFeatureStateValues returns an array of possible values for the DevToolPortalFeatureState const type.
func PossibleDevToolPortalFeatureStateValues() []DevToolPortalFeatureState {
	return []DevToolPortalFeatureState{DevToolPortalFeatureStateDisabled, DevToolPortalFeatureStateEnabled}
}

// DevToolPortalProvisioningState enumerates the values for dev tool portal provisioning state.
type DevToolPortalProvisioningState string

const (
	// DevToolPortalProvisioningStateCanceled ...
	DevToolPortalProvisioningStateCanceled DevToolPortalProvisioningState = "Canceled"
	// DevToolPortalProvisioningStateCreating ...
	DevToolPortalProvisioningStateCreating DevToolPortalProvisioningState = "Creating"
	// DevToolPortalProvisioningStateDeleting ...
	DevToolPortalProvisioningStateDeleting DevToolPortalProvisioningState = "Deleting"
	// DevToolPortalProvisioningStateFailed ...
	DevToolPortalProvisioningStateFailed DevToolPortalProvisioningState = "Failed"
	// DevToolPortalProvisioningStateSucceeded ...
	DevToolPortalProvisioningStateSucceeded DevToolPortalProvisioningState = "Succeeded"
	// DevToolPortalProvisioningStateUpdating ...
	DevToolPortalProvisioningStateUpdating DevToolPortalProvisioningState = "Updating"
)

// PossibleDevToolPortalProvisioningStateValues returns an array of possible values for the DevToolPortalProvisioningState const type.
func PossibleDevToolPortalProvisioningStateValues() []DevToolPortalProvisioningState {
	return []DevToolPortalProvisioningState{DevToolPortalProvisioningStateCanceled, DevToolPortalProvisioningStateCreating, DevToolPortalProvisioningStateDeleting, DevToolPortalProvisioningStateFailed, DevToolPortalProvisioningStateSucceeded, DevToolPortalProvisioningStateUpdating}
}

// EurekaServerEnabledState enumerates the values for eureka server enabled state.
type EurekaServerEnabledState string

const (
	// EurekaServerEnabledStateDisabled Disable the eureka server.
	EurekaServerEnabledStateDisabled EurekaServerEnabledState = "Disabled"
	// EurekaServerEnabledStateEnabled Enable the eureka server.
	EurekaServerEnabledStateEnabled EurekaServerEnabledState = "Enabled"
)

// PossibleEurekaServerEnabledStateValues returns an array of possible values for the EurekaServerEnabledState const type.
func PossibleEurekaServerEnabledStateValues() []EurekaServerEnabledState {
	return []EurekaServerEnabledState{EurekaServerEnabledStateDisabled, EurekaServerEnabledStateEnabled}
}

// EurekaServerState enumerates the values for eureka server state.
type EurekaServerState string

const (
	// EurekaServerStateCanceled ...
	EurekaServerStateCanceled EurekaServerState = "Canceled"
	// EurekaServerStateFailed ...
	EurekaServerStateFailed EurekaServerState = "Failed"
	// EurekaServerStateSucceeded ...
	EurekaServerStateSucceeded EurekaServerState = "Succeeded"
	// EurekaServerStateUpdating ...
	EurekaServerStateUpdating EurekaServerState = "Updating"
)

// PossibleEurekaServerStateValues returns an array of possible values for the EurekaServerState const type.
func PossibleEurekaServerStateValues() []EurekaServerState {
	return []EurekaServerState{EurekaServerStateCanceled, EurekaServerStateFailed, EurekaServerStateSucceeded, EurekaServerStateUpdating}
}

// GatewayCertificateVerification enumerates the values for gateway certificate verification.
type GatewayCertificateVerification string

const (
	// GatewayCertificateVerificationDisabled Disable certificate verification in Spring Cloud Gateway.
	GatewayCertificateVerificationDisabled GatewayCertificateVerification = "Disabled"
	// GatewayCertificateVerificationEnabled Enable certificate verification in Spring Cloud Gateway.
	GatewayCertificateVerificationEnabled GatewayCertificateVerification = "Enabled"
)

// PossibleGatewayCertificateVerificationValues returns an array of possible values for the GatewayCertificateVerification const type.
func PossibleGatewayCertificateVerificationValues() []GatewayCertificateVerification {
	return []GatewayCertificateVerification{GatewayCertificateVerificationDisabled, GatewayCertificateVerificationEnabled}
}

// GatewayProvisioningState enumerates the values for gateway provisioning state.
type GatewayProvisioningState string

const (
	// GatewayProvisioningStateCreating ...
	GatewayProvisioningStateCreating GatewayProvisioningState = "Creating"
	// GatewayProvisioningStateDeleting ...
	GatewayProvisioningStateDeleting GatewayProvisioningState = "Deleting"
	// GatewayProvisioningStateFailed ...
	GatewayProvisioningStateFailed GatewayProvisioningState = "Failed"
	// GatewayProvisioningStateSucceeded ...
	GatewayProvisioningStateSucceeded GatewayProvisioningState = "Succeeded"
	// GatewayProvisioningStateUpdating ...
	GatewayProvisioningStateUpdating GatewayProvisioningState = "Updating"
)

// PossibleGatewayProvisioningStateValues returns an array of possible values for the GatewayProvisioningState const type.
func PossibleGatewayProvisioningStateValues() []GatewayProvisioningState {
	return []GatewayProvisioningState{GatewayProvisioningStateCreating, GatewayProvisioningStateDeleting, GatewayProvisioningStateFailed, GatewayProvisioningStateSucceeded, GatewayProvisioningStateUpdating}
}

// GatewayRouteConfigProtocol enumerates the values for gateway route config protocol.
type GatewayRouteConfigProtocol string

const (
	// GatewayRouteConfigProtocolHTTP ...
	GatewayRouteConfigProtocolHTTP GatewayRouteConfigProtocol = "HTTP"
	// GatewayRouteConfigProtocolHTTPS ...
	GatewayRouteConfigProtocolHTTPS GatewayRouteConfigProtocol = "HTTPS"
)

// PossibleGatewayRouteConfigProtocolValues returns an array of possible values for the GatewayRouteConfigProtocol const type.
func PossibleGatewayRouteConfigProtocolValues() []GatewayRouteConfigProtocol {
	return []GatewayRouteConfigProtocol{GatewayRouteConfigProtocolHTTP, GatewayRouteConfigProtocolHTTPS}
}

// GitImplementation enumerates the values for git implementation.
type GitImplementation string

const (
	// GitImplementationGoGit ...
	GitImplementationGoGit GitImplementation = "go-git"
	// GitImplementationLibgit2 ...
	GitImplementationLibgit2 GitImplementation = "libgit2"
)

// PossibleGitImplementationValues returns an array of possible values for the GitImplementation const type.
func PossibleGitImplementationValues() []GitImplementation {
	return []GitImplementation{GitImplementationGoGit, GitImplementationLibgit2}
}

// HTTPSchemeType enumerates the values for http scheme type.
type HTTPSchemeType string

const (
	// HTTPSchemeTypeHTTP ...
	HTTPSchemeTypeHTTP HTTPSchemeType = "HTTP"
	// HTTPSchemeTypeHTTPS ...
	HTTPSchemeTypeHTTPS HTTPSchemeType = "HTTPS"
)

// PossibleHTTPSchemeTypeValues returns an array of possible values for the HTTPSchemeType const type.
func PossibleHTTPSchemeTypeValues() []HTTPSchemeType {
	return []HTTPSchemeType{HTTPSchemeTypeHTTP, HTTPSchemeTypeHTTPS}
}

// KPackBuildStageProvisioningState enumerates the values for k pack build stage provisioning state.
type KPackBuildStageProvisioningState string

const (
	// KPackBuildStageProvisioningStateFailed ...
	KPackBuildStageProvisioningStateFailed KPackBuildStageProvisioningState = "Failed"
	// KPackBuildStageProvisioningStateNotStarted ...
	KPackBuildStageProvisioningStateNotStarted KPackBuildStageProvisioningState = "NotStarted"
	// KPackBuildStageProvisioningStateRunning ...
	KPackBuildStageProvisioningStateRunning KPackBuildStageProvisioningState = "Running"
	// KPackBuildStageProvisioningStateSucceeded ...
	KPackBuildStageProvisioningStateSucceeded KPackBuildStageProvisioningState = "Succeeded"
)

// PossibleKPackBuildStageProvisioningStateValues returns an array of possible values for the KPackBuildStageProvisioningState const type.
func PossibleKPackBuildStageProvisioningStateValues() []KPackBuildStageProvisioningState {
	return []KPackBuildStageProvisioningState{KPackBuildStageProvisioningStateFailed, KPackBuildStageProvisioningStateNotStarted, KPackBuildStageProvisioningStateRunning, KPackBuildStageProvisioningStateSucceeded}
}

// LastModifiedByType enumerates the values for last modified by type.
type LastModifiedByType string

const (
	// LastModifiedByTypeApplication ...
	LastModifiedByTypeApplication LastModifiedByType = "Application"
	// LastModifiedByTypeKey ...
	LastModifiedByTypeKey LastModifiedByType = "Key"
	// LastModifiedByTypeManagedIdentity ...
	LastModifiedByTypeManagedIdentity LastModifiedByType = "ManagedIdentity"
	// LastModifiedByTypeUser ...
	LastModifiedByTypeUser LastModifiedByType = "User"
)

// PossibleLastModifiedByTypeValues returns an array of possible values for the LastModifiedByType const type.
func PossibleLastModifiedByTypeValues() []LastModifiedByType {
	return []LastModifiedByType{LastModifiedByTypeApplication, LastModifiedByTypeKey, LastModifiedByTypeManagedIdentity, LastModifiedByTypeUser}
}

// ManagedIdentityType enumerates the values for managed identity type.
type ManagedIdentityType string

const (
	// ManagedIdentityTypeNone ...
	ManagedIdentityTypeNone ManagedIdentityType = "None"
	// ManagedIdentityTypeSystemAssigned ...
	ManagedIdentityTypeSystemAssigned ManagedIdentityType = "SystemAssigned"
	// ManagedIdentityTypeSystemAssignedUserAssigned ...
	ManagedIdentityTypeSystemAssignedUserAssigned ManagedIdentityType = "SystemAssigned,UserAssigned"
	// ManagedIdentityTypeUserAssigned ...
	ManagedIdentityTypeUserAssigned ManagedIdentityType = "UserAssigned"
)

// PossibleManagedIdentityTypeValues returns an array of possible values for the ManagedIdentityType const type.
func PossibleManagedIdentityTypeValues() []ManagedIdentityType {
	return []ManagedIdentityType{ManagedIdentityTypeNone, ManagedIdentityTypeSystemAssigned, ManagedIdentityTypeSystemAssignedUserAssigned, ManagedIdentityTypeUserAssigned}
}

// MonitoringSettingState enumerates the values for monitoring setting state.
type MonitoringSettingState string

const (
	// MonitoringSettingStateFailed ...
	MonitoringSettingStateFailed MonitoringSettingState = "Failed"
	// MonitoringSettingStateNotAvailable ...
	MonitoringSettingStateNotAvailable MonitoringSettingState = "NotAvailable"
	// MonitoringSettingStateSucceeded ...
	MonitoringSettingStateSucceeded MonitoringSettingState = "Succeeded"
	// MonitoringSettingStateUpdating ...
	MonitoringSettingStateUpdating MonitoringSettingState = "Updating"
)

// PossibleMonitoringSettingStateValues returns an array of possible values for the MonitoringSettingState const type.
func PossibleMonitoringSettingStateValues() []MonitoringSettingState {
	return []MonitoringSettingState{MonitoringSettingStateFailed, MonitoringSettingStateNotAvailable, MonitoringSettingStateSucceeded, MonitoringSettingStateUpdating}
}

// PowerState enumerates the values for power state.
type PowerState string

const (
	// PowerStateRunning ...
	PowerStateRunning PowerState = "Running"
	// PowerStateStopped ...
	PowerStateStopped PowerState = "Stopped"
)

// PossiblePowerStateValues returns an array of possible values for the PowerState const type.
func PossiblePowerStateValues() []PowerState {
	return []PowerState{PowerStateRunning, PowerStateStopped}
}

// PredefinedAcceleratorProvisioningState enumerates the values for predefined accelerator provisioning state.
type PredefinedAcceleratorProvisioningState string

const (
	// PredefinedAcceleratorProvisioningStateCreating ...
	PredefinedAcceleratorProvisioningStateCreating PredefinedAcceleratorProvisioningState = "Creating"
	// PredefinedAcceleratorProvisioningStateFailed ...
	PredefinedAcceleratorProvisioningStateFailed PredefinedAcceleratorProvisioningState = "Failed"
	// PredefinedAcceleratorProvisioningStateSucceeded ...
	PredefinedAcceleratorProvisioningStateSucceeded PredefinedAcceleratorProvisioningState = "Succeeded"
	// PredefinedAcceleratorProvisioningStateUpdating ...
	PredefinedAcceleratorProvisioningStateUpdating PredefinedAcceleratorProvisioningState = "Updating"
)

// PossiblePredefinedAcceleratorProvisioningStateValues returns an array of possible values for the PredefinedAcceleratorProvisioningState const type.
func PossiblePredefinedAcceleratorProvisioningStateValues() []PredefinedAcceleratorProvisioningState {
	return []PredefinedAcceleratorProvisioningState{PredefinedAcceleratorProvisioningStateCreating, PredefinedAcceleratorProvisioningStateFailed, PredefinedAcceleratorProvisioningStateSucceeded, PredefinedAcceleratorProvisioningStateUpdating}
}

// PredefinedAcceleratorState enumerates the values for predefined accelerator state.
type PredefinedAcceleratorState string

const (
	// PredefinedAcceleratorStateDisabled Disable the predefined accelerator.
	PredefinedAcceleratorStateDisabled PredefinedAcceleratorState = "Disabled"
	// PredefinedAcceleratorStateEnabled Enable the predefined accelerator.
	PredefinedAcceleratorStateEnabled PredefinedAcceleratorState = "Enabled"
)

// PossiblePredefinedAcceleratorStateValues returns an array of possible values for the PredefinedAcceleratorState const type.
func PossiblePredefinedAcceleratorStateValues() []PredefinedAcceleratorState {
	return []PredefinedAcceleratorState{PredefinedAcceleratorStateDisabled, PredefinedAcceleratorStateEnabled}
}

// ProvisioningState enumerates the values for provisioning state.
type ProvisioningState string

const (
	// ProvisioningStateCreating ...
	ProvisioningStateCreating ProvisioningState = "Creating"
	// ProvisioningStateDeleted ...
	ProvisioningStateDeleted ProvisioningState = "Deleted"
	// ProvisioningStateDeleting ...
	ProvisioningStateDeleting ProvisioningState = "Deleting"
	// ProvisioningStateFailed ...
	ProvisioningStateFailed ProvisioningState = "Failed"
	// ProvisioningStateMoveFailed ...
	ProvisioningStateMoveFailed ProvisioningState = "MoveFailed"
	// ProvisioningStateMoved ...
	ProvisioningStateMoved ProvisioningState = "Moved"
	// ProvisioningStateMoving ...
	ProvisioningStateMoving ProvisioningState = "Moving"
	// ProvisioningStateStarting ...
	ProvisioningStateStarting ProvisioningState = "Starting"
	// ProvisioningStateStopping ...
	ProvisioningStateStopping ProvisioningState = "Stopping"
	// ProvisioningStateSucceeded ...
	ProvisioningStateSucceeded ProvisioningState = "Succeeded"
	// ProvisioningStateUpdating ...
	ProvisioningStateUpdating ProvisioningState = "Updating"
)

// PossibleProvisioningStateValues returns an array of possible values for the ProvisioningState const type.
func PossibleProvisioningStateValues() []ProvisioningState {
	return []ProvisioningState{ProvisioningStateCreating, ProvisioningStateDeleted, ProvisioningStateDeleting, ProvisioningStateFailed, ProvisioningStateMoveFailed, ProvisioningStateMoved, ProvisioningStateMoving, ProvisioningStateStarting, ProvisioningStateStopping, ProvisioningStateSucceeded, ProvisioningStateUpdating}
}

// ResourceSkuRestrictionsReasonCode enumerates the values for resource sku restrictions reason code.
type ResourceSkuRestrictionsReasonCode string

const (
	// ResourceSkuRestrictionsReasonCodeNotAvailableForSubscription ...
	ResourceSkuRestrictionsReasonCodeNotAvailableForSubscription ResourceSkuRestrictionsReasonCode = "NotAvailableForSubscription"
	// ResourceSkuRestrictionsReasonCodeQuotaID ...
	ResourceSkuRestrictionsReasonCodeQuotaID ResourceSkuRestrictionsReasonCode = "QuotaId"
)

// PossibleResourceSkuRestrictionsReasonCodeValues returns an array of possible values for the ResourceSkuRestrictionsReasonCode const type.
func PossibleResourceSkuRestrictionsReasonCodeValues() []ResourceSkuRestrictionsReasonCode {
	return []ResourceSkuRestrictionsReasonCode{ResourceSkuRestrictionsReasonCodeNotAvailableForSubscription, ResourceSkuRestrictionsReasonCodeQuotaID}
}

// ResourceSkuRestrictionsType enumerates the values for resource sku restrictions type.
type ResourceSkuRestrictionsType string

const (
	// ResourceSkuRestrictionsTypeLocation ...
	ResourceSkuRestrictionsTypeLocation ResourceSkuRestrictionsType = "Location"
	// ResourceSkuRestrictionsTypeZone ...
	ResourceSkuRestrictionsTypeZone ResourceSkuRestrictionsType = "Zone"
)

// PossibleResourceSkuRestrictionsTypeValues returns an array of possible values for the ResourceSkuRestrictionsType const type.
func PossibleResourceSkuRestrictionsTypeValues() []ResourceSkuRestrictionsType {
	return []ResourceSkuRestrictionsType{ResourceSkuRestrictionsTypeLocation, ResourceSkuRestrictionsTypeZone}
}

// ServiceRegistryProvisioningState enumerates the values for service registry provisioning state.
type ServiceRegistryProvisioningState string

const (
	// ServiceRegistryProvisioningStateCreating ...
	ServiceRegistryProvisioningStateCreating ServiceRegistryProvisioningState = "Creating"
	// ServiceRegistryProvisioningStateDeleting ...
	ServiceRegistryProvisioningStateDeleting ServiceRegistryProvisioningState = "Deleting"
	// ServiceRegistryProvisioningStateFailed ...
	ServiceRegistryProvisioningStateFailed ServiceRegistryProvisioningState = "Failed"
	// ServiceRegistryProvisioningStateSucceeded ...
	ServiceRegistryProvisioningStateSucceeded ServiceRegistryProvisioningState = "Succeeded"
	// ServiceRegistryProvisioningStateUpdating ...
	ServiceRegistryProvisioningStateUpdating ServiceRegistryProvisioningState = "Updating"
)

// PossibleServiceRegistryProvisioningStateValues returns an array of possible values for the ServiceRegistryProvisioningState const type.
func PossibleServiceRegistryProvisioningStateValues() []ServiceRegistryProvisioningState {
	return []ServiceRegistryProvisioningState{ServiceRegistryProvisioningStateCreating, ServiceRegistryProvisioningStateDeleting, ServiceRegistryProvisioningStateFailed, ServiceRegistryProvisioningStateSucceeded, ServiceRegistryProvisioningStateUpdating}
}

// SessionAffinity enumerates the values for session affinity.
type SessionAffinity string

const (
	// SessionAffinityCookie ...
	SessionAffinityCookie SessionAffinity = "Cookie"
	// SessionAffinityNone ...
	SessionAffinityNone SessionAffinity = "None"
)

// PossibleSessionAffinityValues returns an array of possible values for the SessionAffinity const type.
func PossibleSessionAffinityValues() []SessionAffinity {
	return []SessionAffinity{SessionAffinityCookie, SessionAffinityNone}
}

// SkuScaleType enumerates the values for sku scale type.
type SkuScaleType string

const (
	// SkuScaleTypeAutomatic ...
	SkuScaleTypeAutomatic SkuScaleType = "Automatic"
	// SkuScaleTypeManual ...
	SkuScaleTypeManual SkuScaleType = "Manual"
	// SkuScaleTypeNone ...
	SkuScaleTypeNone SkuScaleType = "None"
)

// PossibleSkuScaleTypeValues returns an array of possible values for the SkuScaleType const type.
func PossibleSkuScaleTypeValues() []SkuScaleType {
	return []SkuScaleType{SkuScaleTypeAutomatic, SkuScaleTypeManual, SkuScaleTypeNone}
}

// StorageType enumerates the values for storage type.
type StorageType string

const (
	// StorageTypeStorageAccount ...
	StorageTypeStorageAccount StorageType = "StorageAccount"
	// StorageTypeStorageProperties ...
	StorageTypeStorageProperties StorageType = "StorageProperties"
)

// PossibleStorageTypeValues returns an array of possible values for the StorageType const type.
func PossibleStorageTypeValues() []StorageType {
	return []StorageType{StorageTypeStorageAccount, StorageTypeStorageProperties}
}

// SupportedRuntimePlatform enumerates the values for supported runtime platform.
type SupportedRuntimePlatform string

const (
	// SupportedRuntimePlatformJava ...
	SupportedRuntimePlatformJava SupportedRuntimePlatform = "Java"
	// SupportedRuntimePlatformNETCore ...
	SupportedRuntimePlatformNETCore SupportedRuntimePlatform = ".NET Core"
)

// PossibleSupportedRuntimePlatformValues returns an array of possible values for the SupportedRuntimePlatform const type.
func PossibleSupportedRuntimePlatformValues() []SupportedRuntimePlatform {
	return []SupportedRuntimePlatform{SupportedRuntimePlatformJava, SupportedRuntimePlatformNETCore}
}

// SupportedRuntimeValue enumerates the values for supported runtime value.
type SupportedRuntimeValue string

const (
	// SupportedRuntimeValueJava11 ...
	SupportedRuntimeValueJava11 SupportedRuntimeValue = "Java_11"
	// SupportedRuntimeValueJava17 ...
	SupportedRuntimeValueJava17 SupportedRuntimeValue = "Java_17"
	// SupportedRuntimeValueJava8 ...
	SupportedRuntimeValueJava8 SupportedRuntimeValue = "Java_8"
	// SupportedRuntimeValueNetCore31 ...
	SupportedRuntimeValueNetCore31 SupportedRuntimeValue = "NetCore_31"
)

// PossibleSupportedRuntimeValueValues returns an array of possible values for the SupportedRuntimeValue const type.
func PossibleSupportedRuntimeValueValues() []SupportedRuntimeValue {
	return []SupportedRuntimeValue{SupportedRuntimeValueJava11, SupportedRuntimeValueJava17, SupportedRuntimeValueJava8, SupportedRuntimeValueNetCore31}
}

// TestKeyType enumerates the values for test key type.
type TestKeyType string

const (
	// TestKeyTypePrimary ...
	TestKeyTypePrimary TestKeyType = "Primary"
	// TestKeyTypeSecondary ...
	TestKeyTypeSecondary TestKeyType = "Secondary"
)

// PossibleTestKeyTypeValues returns an array of possible values for the TestKeyType const type.
func PossibleTestKeyTypeValues() []TestKeyType {
	return []TestKeyType{TestKeyTypePrimary, TestKeyTypeSecondary}
}

// TrafficDirection enumerates the values for traffic direction.
type TrafficDirection string

const (
	// TrafficDirectionInbound ...
	TrafficDirectionInbound TrafficDirection = "Inbound"
	// TrafficDirectionOutbound ...
	TrafficDirectionOutbound TrafficDirection = "Outbound"
)

// PossibleTrafficDirectionValues returns an array of possible values for the TrafficDirection const type.
func PossibleTrafficDirectionValues() []TrafficDirection {
	return []TrafficDirection{TrafficDirectionInbound, TrafficDirectionOutbound}
}

// Type enumerates the values for type.
type Type string

const (
	// TypeBasicAuth ...
	TypeBasicAuth Type = "BasicAuth"
	// TypeContainerRegistryCredentials ...
	TypeContainerRegistryCredentials Type = "ContainerRegistryCredentials"
)

// PossibleTypeValues returns an array of possible values for the Type const type.
func PossibleTypeValues() []Type {
	return []Type{TypeBasicAuth, TypeContainerRegistryCredentials}
}

// TypeBasicCertificateProperties enumerates the values for type basic certificate properties.
type TypeBasicCertificateProperties string

const (
	// TypeBasicCertificatePropertiesTypeCertificateProperties ...
	TypeBasicCertificatePropertiesTypeCertificateProperties TypeBasicCertificateProperties = "CertificateProperties"
	// TypeBasicCertificatePropertiesTypeContentCertificate ...
	TypeBasicCertificatePropertiesTypeContentCertificate TypeBasicCertificateProperties = "ContentCertificate"
	// TypeBasicCertificatePropertiesTypeKeyVaultCertificate ...
	TypeBasicCertificatePropertiesTypeKeyVaultCertificate TypeBasicCertificateProperties = "KeyVaultCertificate"
)

// PossibleTypeBasicCertificatePropertiesValues returns an array of possible values for the TypeBasicCertificateProperties const type.
func PossibleTypeBasicCertificatePropertiesValues() []TypeBasicCertificateProperties {
	return []TypeBasicCertificateProperties{TypeBasicCertificatePropertiesTypeCertificateProperties, TypeBasicCertificatePropertiesTypeContentCertificate, TypeBasicCertificatePropertiesTypeKeyVaultCertificate}
}

// TypeBasicCustomPersistentDiskProperties enumerates the values for type basic custom persistent disk
// properties.
type TypeBasicCustomPersistentDiskProperties string

const (
	// TypeBasicCustomPersistentDiskPropertiesTypeAzureFileVolume ...
	TypeBasicCustomPersistentDiskPropertiesTypeAzureFileVolume TypeBasicCustomPersistentDiskProperties = "AzureFileVolume"
	// TypeBasicCustomPersistentDiskPropertiesTypeCustomPersistentDiskProperties ...
	TypeBasicCustomPersistentDiskPropertiesTypeCustomPersistentDiskProperties TypeBasicCustomPersistentDiskProperties = "CustomPersistentDiskProperties"
)

// PossibleTypeBasicCustomPersistentDiskPropertiesValues returns an array of possible values for the TypeBasicCustomPersistentDiskProperties const type.
func PossibleTypeBasicCustomPersistentDiskPropertiesValues() []TypeBasicCustomPersistentDiskProperties {
	return []TypeBasicCustomPersistentDiskProperties{TypeBasicCustomPersistentDiskPropertiesTypeAzureFileVolume, TypeBasicCustomPersistentDiskPropertiesTypeCustomPersistentDiskProperties}
}

// TypeBasicProbeAction enumerates the values for type basic probe action.
type TypeBasicProbeAction string

const (
	// TypeBasicProbeActionTypeExecAction ...
	TypeBasicProbeActionTypeExecAction TypeBasicProbeAction = "ExecAction"
	// TypeBasicProbeActionTypeHTTPGetAction ...
	TypeBasicProbeActionTypeHTTPGetAction TypeBasicProbeAction = "HTTPGetAction"
	// TypeBasicProbeActionTypeProbeAction ...
	TypeBasicProbeActionTypeProbeAction TypeBasicProbeAction = "ProbeAction"
	// TypeBasicProbeActionTypeTCPSocketAction ...
	TypeBasicProbeActionTypeTCPSocketAction TypeBasicProbeAction = "TCPSocketAction"
)

// PossibleTypeBasicProbeActionValues returns an array of possible values for the TypeBasicProbeAction const type.
func PossibleTypeBasicProbeActionValues() []TypeBasicProbeAction {
	return []TypeBasicProbeAction{TypeBasicProbeActionTypeExecAction, TypeBasicProbeActionTypeHTTPGetAction, TypeBasicProbeActionTypeProbeAction, TypeBasicProbeActionTypeTCPSocketAction}
}

// TypeBasicUserSourceInfo enumerates the values for type basic user source info.
type TypeBasicUserSourceInfo string

const (
	// TypeBasicUserSourceInfoTypeBuildResult ...
	TypeBasicUserSourceInfoTypeBuildResult TypeBasicUserSourceInfo = "BuildResult"
	// TypeBasicUserSourceInfoTypeContainer ...
	TypeBasicUserSourceInfoTypeContainer TypeBasicUserSourceInfo = "Container"
	// TypeBasicUserSourceInfoTypeJar ...
	TypeBasicUserSourceInfoTypeJar TypeBasicUserSourceInfo = "Jar"
	// TypeBasicUserSourceInfoTypeNetCoreZip ...
	TypeBasicUserSourceInfoTypeNetCoreZip TypeBasicUserSourceInfo = "NetCoreZip"
	// TypeBasicUserSourceInfoTypeSource ...
	TypeBasicUserSourceInfoTypeSource TypeBasicUserSourceInfo = "Source"
	// TypeBasicUserSourceInfoTypeUploadedUserSourceInfo ...
	TypeBasicUserSourceInfoTypeUploadedUserSourceInfo TypeBasicUserSourceInfo = "UploadedUserSourceInfo"
	// TypeBasicUserSourceInfoTypeUserSourceInfo ...
	TypeBasicUserSourceInfoTypeUserSourceInfo TypeBasicUserSourceInfo = "UserSourceInfo"
)

// PossibleTypeBasicUserSourceInfoValues returns an array of possible values for the TypeBasicUserSourceInfo const type.
func PossibleTypeBasicUserSourceInfoValues() []TypeBasicUserSourceInfo {
	return []TypeBasicUserSourceInfo{TypeBasicUserSourceInfoTypeBuildResult, TypeBasicUserSourceInfoTypeContainer, TypeBasicUserSourceInfoTypeJar, TypeBasicUserSourceInfoTypeNetCoreZip, TypeBasicUserSourceInfoTypeSource, TypeBasicUserSourceInfoTypeUploadedUserSourceInfo, TypeBasicUserSourceInfoTypeUserSourceInfo}
}
